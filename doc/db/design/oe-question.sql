-- MySQL Script generated by MySQL Workbench
-- 10/13/15 17:54:01
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`question_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`question_type` (
  `id` INT NOT NULL COMMENT '',
  `code` VARCHAR(45) NULL COMMENT '',
  `name` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`question`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`question` (
  `id` INT NOT NULL COMMENT '',
  `title` VARCHAR(2000) NULL COMMENT '',
  `title_text` VARCHAR(2000) NULL COMMENT '',
  `answer` VARCHAR(2000) NULL COMMENT '',
  `source` VARCHAR(45) NULL COMMENT '',
  `author` VARCHAR(45) NULL COMMENT '',
  `cteated_time` VARCHAR(45) NULL COMMENT '',
  `updated_time` VARCHAR(45) NULL COMMENT '',
  `status` ENUM('1', '2') NULL COMMENT '',
  `author_id` INT NULL COMMENT '',
  `question_type_id` INT NOT NULL COMMENT '',
  `parent_id` INT NULL COMMENT '',
  PRIMARY KEY (`id`, `question_type_id`)  COMMENT '',
  INDEX `fk_question_question_type1_idx` (`question_type_id` ASC)  COMMENT '',
  CONSTRAINT `fk_question_question_type1`
    FOREIGN KEY (`question_type_id`)
    REFERENCES `mydb`.`question_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tag` (
  `id` INT NOT NULL COMMENT '',
  `name` VARCHAR(45) NULL COMMENT '',
  `parent_id` INT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`question_option`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`question_option` (
  `title` VARCHAR(1000) NULL COMMENT '选项的内容, 找不同的图片',
  `title_text` VARCHAR(1000) NULL COMMENT '',
  `correct` TINYINT NULL COMMENT '选择题时存储时候为正确答案',
  `question_id` INT NOT NULL COMMENT '',
  INDEX `fk_option_question1_idx` (`question_id` ASC)  COMMENT '',
  CONSTRAINT `fk_option_question1`
    FOREIGN KEY (`question_id`)
    REFERENCES `mydb`.`question` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`question_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`question_type` (
  `id` INT NOT NULL COMMENT '',
  `code` VARCHAR(45) NULL COMMENT '',
  `name` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`question_comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`question_comment` (
  `id` INT NOT NULL COMMENT '',
  `user_id` VARCHAR(45) NULL COMMENT '',
  `content` VARCHAR(45) NULL COMMENT '',
  `created_time` VARCHAR(45) NULL COMMENT '',
  `refer_id` INT NULL COMMENT '',
  `status` ENUM('1', '2') NULL COMMENT '',
  `question_id` INT NOT NULL COMMENT '',
  `question_question_type_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`, `question_id`, `question_question_type_id`)  COMMENT '',
  INDEX `fk_question_comment_question1_idx` (`question_id` ASC, `question_question_type_id` ASC)  COMMENT '',
  CONSTRAINT `fk_question_comment_question1`
    FOREIGN KEY (`question_id` , `question_question_type_id`)
    REFERENCES `mydb`.`question` (`id` , `question_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`table2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`table2` (
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`log` (
  `created_time` DATETIME NULL COMMENT '',
  `user_id` INT NULL COMMENT '',
  `content` VARCHAR(300) NULL COMMENT '',
  `entity_type` ENUM('question', 'paper', 'exam') NULL COMMENT '',
  `entity_id` INT NULL COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`table1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`table1` (
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user` (
  `id` INT NOT NULL COMMENT '',
  `job_number` VARCHAR(45) NULL COMMENT '',
  `name` VARCHAR(45) NULL COMMENT '',
  `password` VARCHAR(45) NULL COMMENT '',
  `icon` VARCHAR(300) NULL COMMENT '',
  `is_deleted` TINYINT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`role` (
  `id` INT NOT NULL COMMENT '',
  `code` VARCHAR(45) NULL COMMENT '',
  `name` VARCHAR(45) NULL COMMENT '',
  `weight` INT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`privilege`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`privilege` (
  `id` INT NOT NULL COMMENT '',
  `code` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`map_user_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`map_user_role` (
  `user_id` INT NOT NULL COMMENT '',
  `role_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`user_id`, `role_id`)  COMMENT '',
  INDEX `fk_user_has_role_role1_idx` (`role_id` ASC)  COMMENT '',
  INDEX `fk_user_has_role_user_idx` (`user_id` ASC)  COMMENT '',
  CONSTRAINT `fk_user_has_role_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_role_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `mydb`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`map_role_privilege`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`map_role_privilege` (
  `role_id` INT NOT NULL COMMENT '',
  `privilege_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`role_id`, `privilege_id`)  COMMENT '',
  INDEX `fk_role_has_privilege_privilege1_idx` (`privilege_id` ASC)  COMMENT '',
  INDEX `fk_role_has_privilege_role1_idx` (`role_id` ASC)  COMMENT '',
  CONSTRAINT `fk_role_has_privilege_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `mydb`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_has_privilege_privilege1`
    FOREIGN KEY (`privilege_id`)
    REFERENCES `mydb`.`privilege` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`map_question_tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`map_question_tag` (
  `question_id` INT NOT NULL COMMENT '',
  `tag_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`question_id`, `tag_id`)  COMMENT '',
  INDEX `fk_question_has_tag_tag1_idx` (`tag_id` ASC)  COMMENT '',
  INDEX `fk_question_has_tag_question1_idx` (`question_id` ASC)  COMMENT '',
  CONSTRAINT `fk_question_has_tag_question1`
    FOREIGN KEY (`question_id`)
    REFERENCES `mydb`.`question` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_question_has_tag_tag1`
    FOREIGN KEY (`tag_id`)
    REFERENCES `mydb`.`tag` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`question_copy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`question_copy` (
  `id` INT NOT NULL COMMENT '',
  `title` VARCHAR(2000) NULL COMMENT '',
  `title_text` VARCHAR(2000) NULL COMMENT '',
  `answer` VARCHAR(2000) NULL COMMENT '',
  `source` VARCHAR(45) NULL COMMENT '',
  `author` VARCHAR(45) NULL COMMENT '',
  `cteated_time` VARCHAR(45) NULL COMMENT '',
  `updated_time` VARCHAR(45) NULL COMMENT '',
  `status` ENUM('1', '2') NULL COMMENT '',
  `author_id` INT NULL COMMENT '',
  `is_deleted` TINYINT NULL COMMENT '',
  `parent_id` INT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`log_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`log_history` (
  `created_time` DATETIME NULL COMMENT '',
  `user_id` INT NULL COMMENT '',
  `content` VARCHAR(300) NULL COMMENT '',
  `entity_type` ENUM('question', 'paper', 'exam') NULL COMMENT '',
  `entity_id` INT NULL COMMENT '')
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
