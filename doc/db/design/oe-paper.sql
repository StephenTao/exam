-- MySQL Script generated by MySQL Workbench
-- 10/13/15 17:53:26
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET latin1 COLLATE latin1_swedish_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`paper`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`paper` (
  `id` INT NOT NULL COMMENT '',
  `code` VARCHAR(45) NOT NULL COMMENT '',
  `name` VARCHAR(500) NOT NULL COMMENT '',
  `advice_duration` INT NULL COMMENT '',
  `description` VARCHAR(2000) NULL COMMENT '本试卷可能用到的特殊名词，如数学上给出一些公式，化学上给出一些相对原子质量，或者其他，如必须使用2B铅笔画图等',
  `creator_id` INT NULL COMMENT '',
  `created_time` DATETIME NOT NULL COMMENT '',
  `status` ENUM('draft', 'open', 'used', 'expired') NULL COMMENT '',
  `total_score` DOUBLE NULL COMMENT '',
  `total_question` INT NULL COMMENT '',
  `refer_paper_id` INT NULL COMMENT '',
  `shadow_of` INT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `code_UNIQUE` (`code` ASC)  COMMENT '')
ENGINE = InnoDB
COMMENT = '试卷';


-- -----------------------------------------------------
-- Table `mydb`.`paper_part`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`paper_part` (
  `id` INT NOT NULL COMMENT '',
  `name` VARCHAR(200) NULL COMMENT '大题的标题，如果为空默认是题目的类型（如判断题，为空则显示判断题，否则显示该字段内容，如：你能判断下面的问题是正确的吗？）',
  `total_question` INT NOT NULL COMMENT '',
  `total_score` DOUBLE NOT NULL COMMENT '',
  `description` VARCHAR(2000) NULL COMMENT '描述一下题干，或者标注此题为选做题',
  `order` INT NULL COMMENT '',
  `paper_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`, `paper_id`)  COMMENT '',
  INDEX `fk_paper_part_paper1_idx` (`paper_id` ASC)  COMMENT '',
  CONSTRAINT `fk_paper_part_paper1`
    FOREIGN KEY (`paper_id`)
    REFERENCES `mydb`.`paper` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '每道大题试题的分数和小题数的统计';


-- -----------------------------------------------------
-- Table `mydb`.`user_api`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user_api` (
  `id` INT NOT NULL COMMENT '',
  `user_id` INT NOT NULL COMMENT '',
  `app_name` VARCHAR(200) NOT NULL COMMENT '哪个系统申请的使用该API',
  `api_id` INT NOT NULL COMMENT '',
  `ip` VARCHAR(45) NOT NULL COMMENT '',
  `api_key` VARCHAR(200) NOT NULL COMMENT '',
  `status` ENUM('new', 'open', 'refused') NULL COMMENT '',
  `reason` VARCHAR(2000) NULL COMMENT '用户自己添加一些方便记忆的描述等',
  `created_time` DATETIME NOT NULL COMMENT '',
  `comment` VARCHAR(2000) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`paper_question`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`paper_question` (
  `id` INT NOT NULL COMMENT '',
  `title` VARCHAR(2000) NULL COMMENT '',
  `title_text` VARCHAR(2000) NULL COMMENT '',
  `answer` VARCHAR(2000) NULL COMMENT '',
  `source` VARCHAR(45) NULL COMMENT '',
  `cteated_time` VARCHAR(45) NULL COMMENT '',
  `status` ENUM('1', '2') NULL COMMENT '',
  `author_id` INT NULL COMMENT '',
  `question_type_id` INT NOT NULL COMMENT '',
  `parent_id` INT NULL COMMENT '',
  `order` INT NULL COMMENT '',
  `score` DOUBLE NULL COMMENT '',
  `refer_question_id` INT NULL COMMENT '',
  `paper_part_id` INT NOT NULL COMMENT '',
  INDEX `fk_question_question_type1_idx` (`question_type_id` ASC)  COMMENT '',
  PRIMARY KEY (`id`, `paper_part_id`)  COMMENT '',
  INDEX `fk_paper_question_paper_part1_idx` (`paper_part_id` ASC)  COMMENT '',
  CONSTRAINT `fk_paper_question_paper_part1`
    FOREIGN KEY (`paper_part_id`)
    REFERENCES `mydb`.`paper_part` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`tag` (
  `id` INT NOT NULL COMMENT '',
  `name` VARCHAR(45) NULL COMMENT '',
  `parent_id` INT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`paper_question_option`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`paper_question_option` (
  `title` VARCHAR(1000) NULL COMMENT '选项的内容, 找不同的图片',
  `title_text` VARCHAR(1000) NULL COMMENT '',
  `correct` TINYINT NULL COMMENT '选择题时存储时候为正确答案',
  `paper_question_id` INT NOT NULL COMMENT '',
  `order` INT NULL COMMENT '',
  INDEX `fk_option_question1_idx` (`paper_question_id` ASC)  COMMENT '',
  CONSTRAINT `fk_option_question1`
    FOREIGN KEY (`paper_question_id`)
    REFERENCES `mydb`.`paper_question` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`question_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`question_type` (
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`api`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`api` (
  `id` INT NULL DEFAULT NULL COMMENT '',
  `name` VARCHAR(200) NULL DEFAULT NULL COMMENT '',
  `limit` INT NULL DEFAULT NULL COMMENT '',
  `method` ENUM('post', 'get', 'delete', 'put', 'option') NULL DEFAULT NULL COMMENT '',
  `status` ENUM('close','open') NULL DEFAULT NULL COMMENT '',
  `url` VARCHAR(300) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
